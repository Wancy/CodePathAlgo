public class Solution {
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> A) {
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        helper(A, res, new ArrayList<Integer>(), new boolean[A.size()]);
        return res;
    }
    
    private void helper(ArrayList<Integer> A, ArrayList<ArrayList<Integer>> res, 
        ArrayList<Integer> list, boolean[] visited) {
        if (list.size() == A.size()) {
            res.add(new ArrayList<Integer>(list));
        }
        for (int i = 0; i < A.size(); i++) {
            if (visited[i]) continue;
            list.add(A.get(i));
            visited[i] = true;
            helper(A, res, list, visited);
            list.remove(list.size() - 1);
            visited[i] = false;
        }
    }
}
